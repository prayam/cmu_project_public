Flawfinder version 2.0.17, (C) 2001-2019 David A. Wheeler.
Number of rules (primarily dangerous function names) in C/C++ ruleset: 222
Examining ../cmu_project/source/common/libs/libcertcheck/certcheck.h
Examining ../cmu_project/source/common/TcpSendRecvJpeg.h
Examining ../cmu_project/source/common/NetworkTCP.h
Examining ../cmu_project/source/common/openssl_hostname_validation.cpp
Examining ../cmu_project/source/common/CommonStruct.h
Examining ../cmu_project/source/common/openssl_hostname_validation.h
Examining ../cmu_project/source/common/Logger.cpp
Examining ../cmu_project/source/common/TcpSendRecvJpeg.cpp
Examining ../cmu_project/source/common/Logger.h
Examining ../cmu_project/source/common/NetworkTCP.cpp
Examining ../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.cpp
Examining ../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.h
Examining ../cmu_project/source/server/src/baseEngine.h
Examining ../cmu_project/source/server/src/onet_rt.cpp
Examining ../cmu_project/source/server/src/rnet_rt.h
Examining ../cmu_project/source/server/src/videoStreamer.h
Examining ../cmu_project/source/server/src/faceNet.h
Examining ../cmu_project/source/server/src/pnet_rt.h
Examining ../cmu_project/source/server/src/videoStreamer.cpp
Examining ../cmu_project/source/server/src/network.cpp
Examining ../cmu_project/source/server/src/baseEngine.cpp
Examining ../cmu_project/source/server/src/network.h
Examining ../cmu_project/source/server/src/pBox.h
Examining ../cmu_project/source/server/src/mtcnn.h
Examining ../cmu_project/source/server/src/faceNet.cpp
Examining ../cmu_project/source/server/src/main.cpp
Examining ../cmu_project/source/server/src/common.cpp
Examining ../cmu_project/source/server/src/mtcnn.cpp
Examining ../cmu_project/source/server/src/rnet_rt.cpp
Examining ../cmu_project/source/server/src/onet_rt.h
Examining ../cmu_project/source/server/src/common.h
Examining ../cmu_project/source/server/src/pnet_rt.cpp
Examining ../cmu_project/source/client/src/app.h
Examining ../cmu_project/source/client/src/app.cpp
Examining ../cmu_project/source/client/src/main.cpp

FINAL RESULTS:

../cmu_project/source/common/TcpSendRecvJpeg.cpp:124:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
../cmu_project/source/common/TcpSendRecvJpeg.cpp:129:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
../cmu_project/source/common/TcpSendRecvJpeg.cpp:466:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
../cmu_project/source/server/src/baseEngine.cpp:111:  [2] (misc) open:
  Check when opening files - can an attacker redirect it (via symlinks),
  force the opening of special file type (e.g., device files), move things
  around to create a race condition, control its ancestors, or change its
  contents? (CWE-362).
../cmu_project/source/server/src/faceNet.cpp:122:  [2] (misc) open:
  Check when opening files - can an attacker redirect it (via symlinks),
  force the opening of special file type (e.g., device files), move things
  around to create a race condition, control its ancestors, or change its
  contents? (CWE-362).
../cmu_project/source/server/src/mtcnn.cpp:129:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
../cmu_project/source/server/src/mtcnn.cpp:163:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
../cmu_project/source/server/src/pnet_rt.cpp:25:  [2] (misc) open:
  Check when opening files - can an attacker redirect it (via symlinks),
  force the opening of special file type (e.g., device files), move things
  around to create a race condition, control its ancestors, or change its
  contents? (CWE-362).
../cmu_project/source/server/src/pnet_rt.cpp:49:  [2] (misc) open:
  Check when opening files - can an attacker redirect it (via symlinks),
  force the opening of special file type (e.g., device files), move things
  around to create a race condition, control its ancestors, or change its
  contents? (CWE-362).
../cmu_project/source/common/TcpSendRecvJpeg.cpp:99:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/common/TcpSendRecvJpeg.cpp:100:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/common/TcpSendRecvJpeg.cpp:443:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/common/openssl_hostname_validation.cpp:59:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/common/openssl_hostname_validation.cpp:111:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/server/src/baseEngine.cpp:62:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/src/faceNet.cpp:47:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/src/faceNet.cpp:311:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/server/src/faceNet.cpp:311:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/server/src/main.cpp:45:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/src/main.cpp:120:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/src/main.cpp:121:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/src/main.cpp:127:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/server/src/main.cpp:128:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.cpp:29:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.cpp:30:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.cpp:31:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.cpp:32:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.cpp:33:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.cpp:34:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
../cmu_project/source/server/trt_l2norm_helper/l2norm_helper.h:127:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).

ANALYSIS SUMMARY:

Hits = 30
Lines analyzed = 5827 in approximately 0.24 seconds (24689 lines/second)
Physical Source Lines of Code (SLOC) = 4385
Hits@level = [0]  38 [1]  21 [2]   9 [3]   0 [4]   0 [5]   0
Hits@level+ = [0+]  68 [1+]  30 [2+]   9 [3+]   0 [4+]   0 [5+]   0
Hits/KSLOC@level+ = [0+] 15.5074 [1+] 6.84151 [2+] 2.05245 [3+]   0 [4+]   0 [5+]   0
Minimum risk level = 1

Not every hit is necessarily a security vulnerability.
You can inhibit a report by adding a comment in this form:
// flawfinder: ignore
Make *sure* it's a false positive!
You can use the option --neverignore to show these.

There may be other security vulnerabilities; review your code!
See 'Secure Programming HOWTO'
(https://dwheeler.com/secure-programs) for more information.
